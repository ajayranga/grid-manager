{"version":3,"file":"static/js/20.c51f2bce.chunk.js","mappings":"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","sources":["pages/dashboard/features/CreateAlert/schemas/index.js","pages/dashboard/features/CreateAlert/index.js","pages/dashboard/features/CreateAlert/slice/saga.js","pages/dashboard/features/CreateAlert/slice/index.js","pages/dashboard/features/CreateAlert/slice/selectors.js"],"sourcesContent":["import * as Yup from 'yup';\n\nexport const createAlertSchema = Yup.object({\n  name: Yup.string().min(2).max(25).required('Please enter your name'),\n  criteria: Yup.string().required().oneOf(['greater', 'less']),\n  value: Yup.number()\n    .integer()\n    .positive()\n    .max(100)\n    .required('Please enter value'),\n  alertDays: Yup.array().required('Choose at least one day'),\n  priceSignal: Yup.string().required().oneOf(['Dk-1', 'Dk-2', 'Dk-Gas']),\n  email: Yup.string().email().required('Please enter your email'),\n  phone: Yup.string()\n    .matches(/^[0-9]*$/, 'Phone number can only contain digits')\n    .max(10)\n    .required('Please enter your phone number'),\n  submit: null,\n});\n","import React, { useEffect, useState } from 'react';\nimport {\n  Button,\n  FormHelperText,\n  Grid,\n  InputLabel,\n  OutlinedInput,\n  Typography,\n  Stack,\n  RadioGroup,\n  FormControlLabel,\n  Radio,\n  FormControl,\n  Select,\n  MenuItem,\n  Snackbar,\n  Alert,\n  AlertTitle,\n} from '@mui/material';\nimport { Box } from '@mui/system';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useFormik } from 'formik';\n\nimport { createAlertSchema } from './schemas';\nimport { selectError, selectSuccess } from './slice/selectors';\nimport { UseCreateAlertSlice } from './slice/index';\n\nexport default function Login() {\n  const { actions } = UseCreateAlertSlice();\n  const [showSnackBar, setShowSnackBar] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const success = useSelector(selectSuccess);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    if (error !== '' || success) setShowSnackBar(true);\n  }, [error, success]);\n\n  const initialValues = {\n    name: '',\n    criteria: 'greater',\n    value: 0,\n    alertDays: ['Monday'],\n    priceSignal: 'Dk-1',\n    email: '',\n    phone: '',\n    submit: null,\n  };\n  const { values, handleBlur, handleChange, handleSubmit, errors, touched } =\n    useFormik({\n      initialValues,\n      validationSchema: createAlertSchema,\n      validateOnChange: true,\n      validateOnBlur: true,\n      onSubmit: (values, action) => {\n        dispatch(\n          actions.start({\n            name: values.name,\n            phone: values.phone,\n            email: values.email,\n            criteria: values.criteria,\n            value: values.value,\n            alertDays: values.alertDays,\n            priceSignal: values.priceSignal,\n          })\n        );\n        // action.resetForm();\n      },\n    });\n\n  return (\n    <>\n      <Box\n        component='main'\n        sx={{\n          display: 'flex',\n          alignItems: 'center',\n        }}\n      >\n        <Snackbar\n          open={showSnackBar}\n          anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n          autoHideDuration={6000}\n          onClose={() => {\n            setShowSnackBar(false);\n            dispatch(actions.reset());\n          }}\n        >\n          <Alert\n            severity={error ? 'error' : success ? 'success' : 'info'}\n            color={error ? 'error' : success ? 'success' : 'info'}\n            variant='outlined'\n            sx={{ minWidth: '250px' }}\n          >\n            <AlertTitle>\n              {error ? 'Error' : success ? 'Congratulations' : ''}\n            </AlertTitle>\n            {error ? error : success ? 'Saved Successfully' : ''}\n          </Alert>\n        </Snackbar>\n\n        <form\n          onSubmit={handleSubmit}\n          style={{ margin: 'auto', padding: '20px 16px' }}\n        >\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <Typography variant='h4' component='h4'>\n                Create Alert\n              </Typography>\n            </Grid>\n            <Grid item xs={12}>\n              <Stack spacing={1}>\n                <OutlinedInput\n                  id='name'\n                  type='name'\n                  value={values.name}\n                  name='name'\n                  size='medium'\n                  placeholder='name'\n                  fullWidth\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  error={Boolean(touched.name && errors.name)}\n                />\n                {touched.name && errors.name && (\n                  <FormHelperText error>{errors.name}</FormHelperText>\n                )}\n              </Stack>\n            </Grid>\n            <Grid item xs={12}>\n              <InputLabel htmlFor='criteria'>Criteria</InputLabel>\n              <Stack spacing={1}>\n                <RadioGroup\n                  row\n                  name='criteria'\n                  value={values.criteria}\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                >\n                  <FormControlLabel\n                    value='greater'\n                    control={<Radio />}\n                    label='Greater than'\n                  />\n                  <FormControlLabel\n                    value='less'\n                    control={<Radio />}\n                    label='Less than'\n                  />\n                </RadioGroup>\n                {touched.criteria && errors.criteria && (\n                  <FormHelperText error>{errors.criteria}</FormHelperText>\n                )}\n              </Stack>\n            </Grid>\n\n            <Grid item xs={12}>\n              <Stack spacing={1}>\n                <OutlinedInput\n                  id='value'\n                  type='number'\n                  value={values.value}\n                  name='value'\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  size='medium'\n                  placeholder='value'\n                  fullWidth\n                  error={Boolean(touched.value && errors.value)}\n                />\n                {touched.value && errors.value && (\n                  <FormHelperText error>{errors.value}</FormHelperText>\n                )}\n              </Stack>\n            </Grid>\n\n            <Grid item xs={12}>\n              <Stack spacing={1}>\n                <FormControl>\n                  <InputLabel id='alert-Days'>Day</InputLabel>\n                  <Select\n                    labelId='alert-Days'\n                    id='alertDays'\n                    name='alertDays'\n                    multiple\n                    value={values.alertDays}\n                    onChange={handleChange}\n                    fullWidth\n                    size='medium'\n                    input={<OutlinedInput label='Days' />}\n                    onBlur={handleBlur}\n                    error={Boolean(touched.alertDays && errors.alertDays)}\n                  >\n                    {[\n                      'Monday',\n                      'Tuesday',\n                      'Wednesday',\n                      'Thursday',\n                      'Friday',\n                      'Saturday',\n                      'Sunday',\n                    ].map((name) => (\n                      <MenuItem key={name} value={name}>\n                        {name}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n                {touched.alertDays && errors.alertDays && (\n                  <FormHelperText error>{errors.alertDays}</FormHelperText>\n                )}\n              </Stack>\n            </Grid>\n            <Grid item xs={12}>\n              <Stack spacing={1}>\n                <FormControl>\n                  <InputLabel id='price-Signal'>Price Signal</InputLabel>\n                  <Select\n                    labelId='price-Signal'\n                    id='priceSignal'\n                    name='priceSignal'\n                    value={values.priceSignal}\n                    fullWidth\n                    size='medium'\n                    input={<OutlinedInput label='Price Signal' />}\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    error={Boolean(touched.priceSignal && errors.priceSignal)}\n                  >\n                    {['Dk-1', 'Dk-2', 'Dk-Gas'].map((name) => (\n                      <MenuItem key={name} value={name}>\n                        {name}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n                {touched.priceSignal && errors.priceSignal && (\n                  <FormHelperText error>{errors.priceSignal}</FormHelperText>\n                )}\n              </Stack>\n            </Grid>\n            <Grid item xs={12}>\n              <Stack spacing={1}>\n                <OutlinedInput\n                  id='email'\n                  type='email'\n                  value={values.email}\n                  name='email'\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  size='medium'\n                  placeholder='Email address'\n                  fullWidth\n                  error={Boolean(touched.email && errors.email)}\n                />\n                {touched.email && errors.email && (\n                  <FormHelperText error>{errors.email}</FormHelperText>\n                )}\n              </Stack>\n            </Grid>\n\n            <Grid item xs={12}>\n              <Stack spacing={1}>\n                <OutlinedInput\n                  id='phone'\n                  type='phone'\n                  value={values.phone}\n                  name='phone'\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  size='medium'\n                  placeholder='Phone Number'\n                  fullWidth\n                  error={Boolean(touched.phone && errors.phone)}\n                />\n                {touched.phone && errors.phone && (\n                  <FormHelperText error>{errors.phone}</FormHelperText>\n                )}\n              </Stack>\n            </Grid>\n            {errors.submit && (\n              <Grid item xs={12}>\n                <FormHelperText error>{errors.submit}</FormHelperText>\n              </Grid>\n            )}\n            <Grid item>\n              <Button\n                size='large'\n                type='submit'\n                variant='contained'\n                color='primary'\n                sx={{ pl: 5, pr: 5 }}\n              >\n                Submit\n              </Button>\n            </Grid>\n          </Grid>\n        </form>\n      </Box>\n    </>\n  );\n}\n","import { call, put, takeLatest, delay, select } from 'redux-saga/effects';\nimport { createAlertActions as actions } from '../slice';\nimport { request } from 'utils/request';\nimport { selectToken } from 'pages/Login/slice/selectors';\n\nconst createAlert = function* (action) {\n  delay(10);\n  try {\n    const requestURL = '/api/alert';\n    const token = yield select(selectToken);\n    if (token === '') {\n      yield put(actions.failed('No Token found'));\n    } else {\n      yield call(request, requestURL, {\n        method: 'post',\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n        data: {\n          name: action.payload.name,\n          phone: action.payload.phone,\n          email: action.payload.email,\n          criteria: action.payload.criteria,\n          value: action.payload.value,\n          alertDays: action.payload.alertDays,\n          priceSignal: action.payload.priceSignal,\n        },\n      });\n      yield put(actions.success());\n    }\n  } catch (error) {\n    process.env.NODE_ENV === 'development' && console.log(error);\n    yield put(\n      actions.failed(\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n      )\n    );\n  }\n};\n\nexport const createAlertSaga = function* () {\n  yield takeLatest(actions.start.type, createAlert);\n};\n","import { createSlice } from '@reduxjs/toolkit';\nimport { useInjectReducer, useInjectSaga } from 'redux-injectors';\nimport { createAlertSaga } from './saga';\n\nexport const initialState = {\n  loading: false,\n  error: '',\n  success: false,\n};\n\nconst createAlertSlice = createSlice({\n  name: 'createAlert',\n  initialState,\n  reducers: {\n    start(state, action) {\n      state.loading = true;\n    },\n    success(state, action) {\n      state.error = '';\n      state.loading = false;\n      state.success = true;\n    },\n    failed(state, action) {\n      state.error = action.payload;\n      state.loading = false;\n    },\n    reset(state, action) {\n      state.error = '';\n      state.loading = false;\n      state.success = false;\n    },\n  },\n});\n\nexport const { actions: createAlertActions } = createAlertSlice;\nexport default createAlertSlice.reducer;\n\nexport const UseCreateAlertSlice = () => {\n  useInjectReducer({\n    key: createAlertSlice.name,\n    reducer: createAlertSlice.reducer,\n  });\n  useInjectSaga({\n    key: createAlertSlice.name,\n    saga: createAlertSaga,\n  });\n  return { actions: createAlertSlice.actions };\n};\n","import { createSelector } from '@reduxjs/toolkit';\n\nimport { initialState } from '../slice';\n\nconst selectDomain = (state) => state.createAlert || initialState;\n\nexport const selectLoading = createSelector(\n  [selectDomain],\n  (createAlert) => createAlert.loading\n);\n\nexport const selectError = createSelector(\n  [selectDomain],\n  (createAlert) => createAlert.error\n);\n\nexport const selectSuccess = createSelector(\n  [selectDomain],\n  (createAlert) => createAlert.success\n);\n"],"names":["createAlertSchema","Yup","name","min","max","required","criteria","oneOf","value","integer","positive","alertDays","priceSignal","email","phone","matches","submit","Login","actions","UseCreateAlertSlice","useState","showSnackBar","setShowSnackBar","dispatch","useDispatch","success","useSelector","selectSuccess","error","selectError","useEffect","useFormik","initialValues","validationSchema","validateOnChange","validateOnBlur","onSubmit","values","action","start","handleBlur","handleChange","handleSubmit","errors","touched","Box","component","sx","display","alignItems","Snackbar","open","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","reset","Alert","severity","color","variant","minWidth","AlertTitle","style","margin","padding","Grid","container","spacing","item","xs","Typography","Stack","OutlinedInput","id","type","size","placeholder","fullWidth","onBlur","onChange","Boolean","FormHelperText","InputLabel","htmlFor","RadioGroup","row","FormControlLabel","control","Radio","label","FormControl","Select","labelId","multiple","input","map","MenuItem","Button","pl","pr","createAlert","delay","requestURL","select","selectToken","token","put","call","request","method","headers","Authorization","data","payload","response","message","createAlertSaga","takeLatest","initialState","loading","createAlertSlice","createSlice","reducers","state","failed","createAlertActions","useInjectReducer","key","reducer","useInjectSaga","saga","selectDomain","selectLoading","createSelector"],"sourceRoot":""}